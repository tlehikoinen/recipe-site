version: '3'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    restart: unless-stopped
    container_name: backend
    volumes:
      - ./.eslintrc.json:/.eslintrc.json
      - ./backend:/backend
      - ./backend/node_modules
    depends_on:
      - mongo
      - localstack
    environment:
      - MONGODB_URI=mongodb://mongo:27017
      - S3_AVATAR_REGION=eu-north-1
      - S3_AVATAR_NAME=avatar-bucket # Create a S3 bucket with similar name "avatar-bucket"
      - S3_ENDPOINT=http://localstack:4566
      - S3_AVATAR_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE # Example from S3 documentation
      - S3_AVATAR_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY # Example from S3 documentation
      - PORT=5000
      - SECRET=1 # JWT secret
    command: npm run dev

  mongo:
    image: mongo
    restart: unless-stopped
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - data-volume:/data/db


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    container_name: frontend
    volumes:
      - ./.eslintrc.json:/.eslintrc.json
      - ./frontend:/frontend
    depends_on:
      - backend
    command: npm start

  
  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - 4566:4566
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=eu-north-1
      - AWS_DEFAULT_REGION=eu-north-1
      - USE_SSL=false
      - DATA_DIR=/tmp/localstack/data
      - HOSTNAME=localstack
      - HOSTNAME_EXTERNAL=localstack
      - DEBUG=1
    volumes:
      - ./.localstack:/tmp/localstack
      - ./aws:/docker-entrypoint-initaws.d # Run scripts at startup and create avatar bucket

volumes:
    data-volume:
    node_modules:
    web-root:
      driver: local

      
